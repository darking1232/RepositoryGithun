diff --git a/conf/battle/battle.conf b/conf/battle/battle.conf
index 2f62f6d..d7f0738 100644
--- a/conf/battle/battle.conf
+++ b/conf/battle/battle.conf
@@ -198,3 +198,9 @@ snap_dodge: no
 // NOTE: WS_MELTDOWN is exempt from this check when disabled.
 // Official: no
 break_mob_equip: no
+
+// ****************************************
+// Reserved Costume ID's
+// ****************************************
+// Reserved Char ID for costume converted items.
+reserved_costume_id: 999998
diff --git a/doc/script_commands.txt b/doc/script_commands.txt
index 1144dc6..f3de2d0 100644
--- a/doc/script_commands.txt
+++ b/doc/script_commands.txt
@@ -11908,3 +11908,25 @@ Set position for NPC dialog in pixels.
 Set position for NPC dialog in screen size percent.
 
 ---------------------------------------
+
+
+
+*costume1 <equipment position>;
+
+Converts equipment in <equipment position> to costume version that has no stats.
+
+Applicable positions are:
+ EQI_HEAD_TOP - Top Headgear
+ EQI_HEAD_MID - Middle Headgear
+ EQI_HEAD_LOW - Lower Headgear
+ EQI_GARMENT - Garment
+
+---------------------------------------
+
+*getcostumeitem <item id>;
+*getcostumeitem <"item name">;
+
+Spawn a costume version of an <item id> or <"item name"> in attached player's inventory.
+
+---------------------------------------
+
diff --git a/npc/custom/costume.txt b/npc/custom/costume.txt
new file mode 100644
index 0000000..7104da9
--- /dev/null
+++ b/npc/custom/costume.txt
@@ -0,0 +1,192 @@
+// -------------------------------------------------------------------------------
+// 	Script Name : Headgear to Costume converter >> Costume to Headgear converter
+// -------------------------------------------------------------------------------
+// Description :
+// - Allows a user to convert the equipped headgear (on Top, Mid or Low) into a
+//   costume item. It will remove any card and refine of the Item.
+// - Allows a user to restore the equipped costume headgear (on Top, Mid or Low)
+//   into its original form. It will not return any card or refine of the item.
+// -------------------------------------------------------------------------------
+function	script	costume	{
+	.@npc_name$ = getarg(0);
+	disable_items;
+	mes "["+ .@npc_name$ +"]";
+	mes "Here you can convert your headgears into a Costume Headgear or restore to its Original form.";
+	next;
+	mes "I cannot convert Rental or bounded items into costume.";
+	next;
+	mes "I will require 1 Costume Ticket to transform an ordinary headgear into a costume.";
+	mes "";
+	mes "Restoring a costume back to it's original form will cost 30,000,000 Zeny.";
+	next;
+	switch(select("I want to convert.:I want to restore.:No thanks.")) {
+	case 1:
+		setarray .@indices[1], EQI_HEAD_TOP, EQI_HEAD_MID, EQI_HEAD_LOW;
+		for (.@i = 1; .@i<=3; ++.@i) {
+			if (getequipisequiped(.@indices[.@i])) {
+				.@menu$ = .@menu$ + F_getpositionname(.@indices[.@i]) + "-[" + getequipname(.@indices[.@i]) + "]";
+				.@equipped = 1;
+			}
+			.@menu$ = .@menu$ + ":";
+		}
+		if (.@equipped == 0) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You need to wear headgears that I can costume...";
+			close;
+		}
+		//replace to 50026 once items added
+		if (countitem(7581) < 1){
+		mes "You do not have the Costume Ticket from your inventory.";
+		close;
+		}
+		mes "["+ .@npc_name$ +"]";
+		mes "Please select what to convert.";
+		mes "^FF0000 Take note: ^0000FF";
+		mes "^0B27F3 I cannot convert items that has a refine OR a card inserted. ^0000FF";
+		next;
+		.@part = .@indices[ select(.@menu$) ];
+		if (!getequipisequiped(.@part)) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You're not wearing anything there...";
+			close;
+		}
+		getinventorylist;
+			for (.@i = 0; .@i < @inventorylist_count; .@i++) {
+			//	mes "test " + getequipid(EQI_HEAD_TOP) + " test";
+ //     if (@inventorylist_bound[.@i]) {
+ //          mes "you are wearing "+ @inventorylist_equip[.@i];
+//		mes "you are wearin1g "+   @inventorylist_id[.@i] ;
+//		mes "wew" + getequipid(.@part);
+//close;
+//          
+ //      }
+	
+				if (@inventorylist_expire[.@i]) {
+					if (@inventorylist_equip[.@i] > 0 && @inventorylist_id[.@i] == getequipid(.@part)){
+						mes "Your item ( ^FF0000"+ getitemname(getequipid(.@part)) + "^0000FF ) is rental. I cannot convert this item.";
+						mes "";
+					close;
+					}
+				}
+				if (@inventorylist_bound[.@i] ) {
+					if (@inventorylist_equip[.@i] > 0 && @inventorylist_id[.@i] == getequipid(.@part)){
+						mes "Your item ( ^FF0000"+ getitemname(getequipid(.@part)) + "^0000FF ) is bounded. I cannot convert this item";
+						mes"";
+					close;
+					}				
+				}
+			
+			}
+		if ( getequiprefinerycnt(.@part) >= 1 ) {
+			mes "["+ .@npc_name$ +"]";
+			mes "Your item (" + getitemname(getequipid(.@part)) + ") that you want to convert has a refine. I cannot convert this to costume.";
+			close;
+		}
+		set .@cardcount,getequipcardcnt(.@part);
+		if(.@cardcount > 0) {
+			mes "["+ .@npc_name$ +"]";
+			mes "Young one... There are card/s compounded on this item (" + getitemname(getequipid(.@part)) + "). I can do nothing with it, I'm afraid.";
+			close;
+		}
+		mes "["+ .@npc_name$ +"]";
+		mes "You want to Costume your " + getitemname(getequipid(.@part)) + "?";
+		next;
+
+		if (select("Yes, proceed:No, sorry.") == 2) {
+			mes "["+ .@npc_name$ + "]";
+			mes "Need some time to think about it, huh?";
+			mes "Alright, I can understand.";
+			close;
+		}
+
+		costume1 .@part; // Convert the Headgear
+		//replace to 50026 once items added
+		delitem 7581,1;
+		mes "["+ .@npc_name$ +"]";
+		mes "Done, enjoy your costume headgear.";
+		close;
+	case 2:
+		setarray .@indices[1], EQI_COSTUME_HEAD_TOP, EQI_COSTUME_HEAD_MID, EQI_COSTUME_HEAD_LOW;
+		for (.@i = 1; .@i<=3; ++.@i) {
+			if (getequipisequiped(.@indices[.@i])) {
+				.@menu$ = .@menu$ + F_getpositionname(.@indices$[.@i]) + "-[" + getequipname(.@indices[.@i]) + "]";
+				.@equipped = 1;
+			}
+			.@menu$ = .@menu$ + ":";
+		}
+
+		if (.@equipped == 0) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You need to wear costumed headgears that I can restore...";
+			close;
+		}
+
+		mes "["+ .@npc_name$ +"]";
+		mes "Please select what to restore.";
+		mes "Remember, I will only restore it back without refine and cards.";
+		mes "I also need 30,000,000 Zeny to restore.";
+		next;
+
+		.@part = .@indices[ select(.@menu$) ];
+		if (!getequipisequiped(.@part)) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You're not wearing anything there...";
+			close;
+		}
+		if (Zeny < 30000000) {
+		mes " You do not have enough Zeny. I require 30,000,000 Zeny to use my service.";
+		close;
+		}
+		if (isequippedcnt(getequipid(.@part)) > 1) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You're wearing too many of the same headgear!";
+			mes "How am I supposed to know which one to restore?";
+			mes "See me when you have one equipped.";
+			close;
+		}
+
+		if (countitem(getequipid(.@part)) > 1) {
+			mes "["+ .@npc_name$ +"]";
+			mes "You have another " + getitemname(getequipid(.@part)) + " with you.";
+			mes "Put it away before restoring.";
+			close;
+		}
+
+		mes "[" + .@npc_name$ + "]";
+		mes "You want to restore your " + getitemname(getequipid(.@part)) + "?";
+		next;
+
+		if (select("Yes, proceed:No, sorry.") == 2) {
+			mes "["+ .@npc_name$ +"]";
+			mes "Need some time to think about it, huh?";
+			mes "Alright, I can understand.";
+			close;
+		}
+
+		// Restore headgear by recreating
+		a = getequipid(.@part);
+		delitem a,1;
+		getitem a,1;
+		set Zeny, Zeny-30000000;
+		mes "["+ .@npc_name$ +"]";
+		mes "Done, enjoy your restored headgear.";
+		close;
+	case 3:
+		mes "["+ .@npc_name$ +"]";
+		mes "Very well. Return at once if you seek my services.";
+		close;
+	}
+}
+
+// ---------------------------------------------------------------------------
+// Add more lines to put your npc on different cities (adjust name if desired)
+// ---------------------------------------------------------------------------
+prontera,167,191,4	script	Costume Clown#1	715,{ 
+callfunc "costume","Costume Clown",0; 
+
+OnInit:
+waitingroom "Costume ITEM NPC",0;
+
+end; 
+}
+
diff --git a/npc/custom/costumeitemdisable.txt b/npc/custom/costumeitemdisable.txt
new file mode 100644
index 0000000..7beff54
--- /dev/null
+++ b/npc/custom/costumeitemdisable.txt
@@ -0,0 +1,18 @@
+-	script	CheckWoEHat	-1,{
+end;
+
+OnPCLoadMapEvent:
+if(getmapflag(strcharinfo(3),mf_gvg_castle)) //// For Castle Maps
+  {
+  changelook LOOK_HEAD_TOP,0;
+  changelook LOOK_HEAD_MID,0;
+  changelook LOOK_HEAD_BOTTOM,0;
+  end;
+  }
+///////////////// Change to normal when transfering to regular map.
+changelook LOOK_HEAD_TOP,getlook(LOOK_HEAD_TOP);
+changelook LOOK_HEAD_MID,getlook(LOOK_HEAD_MID);
+changelook LOOK_HEAD_BOTTOM,getlook(LOOK_HEAD_BOTTOM);
+end;
+
+}
\ No newline at end of file
diff --git a/npc/scripts_custom.conf b/npc/scripts_custom.conf
index 5842dcb..08361b1 100644
--- a/npc/scripts_custom.conf
+++ b/npc/scripts_custom.conf
@@ -7,6 +7,9 @@
 //npc: npc/location/to/script.txt
 
 // ----------------------- Basic Scripts -----------------------
+npc: npc/custom/costume.txt
+npc: npc/custom/costumeitemdisable.txt
+npc: npc/custom/hourly_reward_giver.txt
 npc: npc/custom/hourly_reward_giver.txt
 npc: npc/custom/multi_points_shop.txt
 npc: npc/custom/activity_rewards.txt
diff --git a/src/map/atcommand.cpp b/src/map/atcommand.cpp
index 76d372f..01d3856 100644
--- a/src/map/atcommand.cpp
+++ b/src/map/atcommand.cpp
@@ -1563,7 +1563,7 @@ ACMD_FUNC(healap)
 ACMD_FUNC(item)
 {
 	char item_name[100];
-	int32 number = 0, bound = BOUND_NONE;
+	int32 number = 0, bound = BOUND_NONE, costume1 = 0;
 	char flag = 0;
 	char *itemlist;
 
@@ -1619,7 +1619,27 @@ ACMD_FUNC(item)
 	// Produce items in list
 	for( const auto& item : items ){
 		t_itemid item_id = item->nameid;
-
+		if (!strcmpi(command + 1, "costumeitem"))
+		{
+			if (!battle_config.reserved_costume_id)
+			{
+				clif_displaymessage(fd, "Costume convertion is disable. Set a value for reserved_cosutme_id on your battle.conf file.");
+				return -1;
+			}
+			if (!(item->equip&EQP_HEAD_LOW) &&
+				!(item->equip&EQP_HEAD_MID) &&
+				!(item->equip&EQP_HEAD_TOP) &&
+				!(item->equip&EQP_COSTUME_HEAD_LOW) &&
+				!(item->equip&EQP_COSTUME_HEAD_MID) &&
+				!(item->equip&EQP_COSTUME_HEAD_TOP) &&
+				!(item->equip&EQP_GARMENT) &&
+				!(item->equip&EQP_COSTUME_GARMENT))
+			{
+				clif_displaymessage(fd, "You cannot costume this item. Costume only work for headgears.");
+				return -1;
+			}
+			costume1 = 1;
+		}
 		//Check if it's stackable.
 		if( !itemdb_isstackable2( item.get() ) ){
 			get_count = 1;
@@ -1632,6 +1652,11 @@ ACMD_FUNC(item)
 
 				item_tmp.nameid = item_id;
 				item_tmp.identify = 1;
+				if (costume1 == 1) { // Costume item
+					item_tmp.card[0] = CARD0_CREATE;
+					item_tmp.card[2] = GetWord(battle_config.reserved_costume_id, 0);
+					item_tmp.card[3] = GetWord(battle_config.reserved_costume_id, 1);
+				}
 				item_tmp.bound = bound;
 				if ((flag = pc_additem(sd, &item_tmp, get_count, LOG_TYPE_COMMAND)))
 					clif_additem(sd, 0, 0, flag);
@@ -12155,6 +12180,7 @@ void atcommand_basecommands(void) {
 		ACMD_DEF(clonestat),
 		ACMD_DEF(bodystyle),
 		ACMD_DEF(adopt),
+		ACMD_DEF2("costumeitem", item),
 		ACMD_DEF(agitstart3),
 		ACMD_DEF(agitend3),
 		ACMD_DEFR(limitedsale, ATCMD_NOCONSOLE|ATCMD_NOAUTOTRADE),
diff --git a/src/map/battle.cpp b/src/map/battle.cpp
index b69bc93..d8cd0dd 100644
--- a/src/map/battle.cpp
+++ b/src/map/battle.cpp
@@ -12120,6 +12120,7 @@ static const struct _battle_data {
 	{ "exp_cost_redemptio_limit",           &battle_config.exp_cost_redemptio_limit,        5,      0,      MAX_PARTY,      },
 	{ "mvp_exp_reward_message",             &battle_config.mvp_exp_reward_message,          0,      0,      1,              },
 	{ "can_damage_skill",                   &battle_config.can_damage_skill,                1,      0,      BL_ALL,         },
+	{ "reserved_costume_id",				&battle_config.reserved_costume_id,				999998,	0,		INT_MAX,		},
 	{ "atcommand_levelup_events",			&battle_config.atcommand_levelup_events,		0,		0,		1,				},
 	{ "atcommand_disable_npc",				&battle_config.atcommand_disable_npc,			1,		0,		1,				},
 	{ "block_account_in_same_party",		&battle_config.block_account_in_same_party,		1,		0,		1,				},
diff --git a/src/map/battle.hpp b/src/map/battle.hpp
index 4fb67bb..4eafc21 100644
--- a/src/map/battle.hpp
+++ b/src/map/battle.hpp
@@ -660,6 +660,7 @@ struct Battle_Config
 	int32 exp_cost_redemptio_limit;
 	int32 mvp_exp_reward_message;
 	int32 can_damage_skill; //Which BL types can damage traps
+	int reserved_costume_id;
 	int32 atcommand_levelup_events;
 	int32 atcommand_disable_npc;
 	int32 block_account_in_same_party;
diff --git a/src/map/map.cpp b/src/map/map.cpp
index ef28d38..d17f950 100644
--- a/src/map/map.cpp
+++ b/src/map/map.cpp
@@ -2131,6 +2131,11 @@ void map_reqnickdb(map_session_data * sd, int32 charid)
 	map_session_data* tsd;
 
 	nullpo_retv(sd);
+	if (battle_config.reserved_costume_id && battle_config.reserved_costume_id == charid)
+	{
+		clif_solved_charname(*sd, charid, "Costume");
+		return;
+	}
 
 	tsd = map_charid2sd(charid);
 	if( tsd != nullptr )
diff --git a/src/map/pc.cpp b/src/map/pc.cpp
index 6dee85f..d1847ae 100644
--- a/src/map/pc.cpp
+++ b/src/map/pc.cpp
@@ -1483,8 +1483,18 @@ int32 pc_equippoint_sub(map_session_data *sd,struct item_data* id){
 int32 pc_equippoint(map_session_data *sd,int32 n){
 	nullpo_ret(sd);
 
-	return pc_equippoint_sub(sd,sd->inventory_data[n]);
-}
+	int ep = pc_equippoint_sub(sd, sd->inventory_data[n]);
+
+	if (battle_config.reserved_costume_id &&
+		sd->inventory.u.items_inventory[n].card[0] == CARD0_CREATE &&
+		MakeDWord(sd->inventory.u.items_inventory[n].card[2], sd->inventory.u.items_inventory[n].card[3]) == battle_config.reserved_costume_id)
+	{ // Costume Item - Converted
+		if (ep&EQP_HEAD_TOP) { ep &= ~EQP_HEAD_TOP; ep |= EQP_COSTUME_HEAD_TOP; }
+		if (ep&EQP_HEAD_LOW) { ep &= ~EQP_HEAD_LOW; ep |= EQP_COSTUME_HEAD_LOW; }
+		if (ep&EQP_HEAD_MID) { ep &= ~EQP_HEAD_MID; ep |= EQP_COSTUME_HEAD_MID; }
+		if (ep&EQP_GARMENT) { ep &= ~EQP_GARMENT; ep |= EQP_COSTUME_GARMENT; }
+	}
+	return ep;}
 
 /**
  * Fill inventory_data with struct *item_data through inventory (fill with struct *item)
diff --git a/src/map/script.cpp b/src/map/script.cpp
index 01a7be8..de2d93d 100644
--- a/src/map/script.cpp
+++ b/src/map/script.cpp
@@ -8190,6 +8190,115 @@ BUILDIN_FUNC(setitemdroprate) {
 	return SCRIPT_CMD_SUCCESS;
 }
 
+/*==========================================
+* Costume Items
+*------------------------------------------*/
+BUILDIN_FUNC(costume1)
+{
+	int i = -1, num, ep;
+	TBL_PC *sd;
+
+	num = script_getnum(st, 2); // Equip Slot
+
+	if (!script_rid2sd(sd))
+		return SCRIPT_CMD_FAILURE;
+
+	if (equip_index_check(num))
+		i = pc_checkequip(sd, equip_bitmask[num]);
+	if (i < 0)
+		return SCRIPT_CMD_FAILURE;
+
+	ep = sd->inventory.u.items_inventory[i].equip;
+	if (!(ep&EQP_HEAD_LOW) && !(ep&EQP_HEAD_MID) && !(ep&EQP_HEAD_TOP) && !(ep&EQP_GARMENT)) {
+		ShowError("buildin_costume: Attempted to convert non-cosmetic item to costume.");
+		return SCRIPT_CMD_FAILURE;
+	}
+	log_pick_pc(sd, LOG_TYPE_SCRIPT, -1, &sd->inventory.u.items_inventory[i]);
+	pc_unequipitem(sd, i, 2);
+	clif_delitem(*sd, i, 1, 3);
+	// --------------------------------------------------------------------
+	sd->inventory.u.items_inventory[i].refine = 0;
+	sd->inventory.u.items_inventory[i].attribute = 0;
+	sd->inventory.u.items_inventory[i].card[0] = CARD0_CREATE;
+	sd->inventory.u.items_inventory[i].card[1] = 0;
+	sd->inventory.u.items_inventory[i].card[2] = GetWord(battle_config.reserved_costume_id, 0);
+	sd->inventory.u.items_inventory[i].card[3] = GetWord(battle_config.reserved_costume_id, 1);
+
+	if (ep&EQP_HEAD_TOP) { ep &= ~EQP_HEAD_TOP; ep |= EQP_COSTUME_HEAD_TOP; }
+	if (ep&EQP_HEAD_LOW) { ep &= ~EQP_HEAD_LOW; ep |= EQP_COSTUME_HEAD_LOW; }
+	if (ep&EQP_HEAD_MID) { ep &= ~EQP_HEAD_MID; ep |= EQP_COSTUME_HEAD_MID; }
+	if (ep&EQP_GARMENT) { ep &= EQP_GARMENT; ep |= EQP_COSTUME_GARMENT; }
+	// --------------------------------------------------------------------
+	log_pick_pc(sd, LOG_TYPE_SCRIPT, 1, &sd->inventory.u.items_inventory[i]);
+
+	clif_additem(sd, i, 1, 0);
+	pc_equipitem(sd, i, ep);
+	clif_misceffect(*sd, NOTIFYEFFECT_REFINE_SUCCESS);
+
+	return SCRIPT_CMD_SUCCESS;
+}
+
+/*===============================
+ * getcostumeitem <item id>;
+ * getcostumeitem <"item name">;
+ *===============================*/
+BUILDIN_FUNC(getcostumeitem)
+{
+	unsigned short nameid;
+	struct item item_tmp;
+	TBL_PC *sd;
+	struct script_data *data;
+
+	if (!script_rid2sd(sd))
+	{	// No player attached.
+		script_pushint(st, 0);
+		return SCRIPT_CMD_SUCCESS;
+	}
+
+	data = script_getdata(st, 2);
+	get_val(st, data);
+	if (data_isstring(data)) {
+		int ep;
+		const char *name = conv_str(st, data);
+		std::shared_ptr<item_data> item_data = item_db.searchname(name);
+		if (item_data == NULL)
+		{	//Failed
+			script_pushint(st, 0);
+			return SCRIPT_CMD_SUCCESS;
+		}
+		ep = item_data->equip;
+		if (!(ep&EQP_HEAD_LOW) && !(ep&EQP_HEAD_MID) && !(ep&EQP_HEAD_TOP) && !(ep&EQP_GARMENT)){
+			ShowError("buildin_getcostumeitem: Attempted to convert non-cosmetic item to costume.");
+			return SCRIPT_CMD_FAILURE;
+		}
+		nameid = item_data->nameid;
+	}
+	else
+		nameid = conv_num(st, data);
+
+	if (!item_db.exists(nameid))
+	{	// Item does not exist.
+		script_pushint(st, 0);
+		return SCRIPT_CMD_SUCCESS;
+	}
+
+	memset(&item_tmp, 0, sizeof(item_tmp));
+	item_tmp.nameid = nameid;
+	item_tmp.amount = 1;
+	item_tmp.identify = 1;
+	item_tmp.card[0] = CARD0_CREATE;
+	item_tmp.card[2] = GetWord(battle_config.reserved_costume_id, 0);
+	item_tmp.card[3] = GetWord(battle_config.reserved_costume_id, 1);
+	if (pc_additem(sd, &item_tmp, 1, LOG_TYPE_SCRIPT)) {
+		script_pushint(st, 0);
+		return SCRIPT_CMD_SUCCESS;	//Failed to add item, we will not drop if they don't fit
+	}
+
+	script_pushint(st, 1);
+	return SCRIPT_CMD_SUCCESS;
+}
+
+
 /*==========================================
  * gets a random item ID from an item group [Skotlex]
  * groupranditem <group_num>{,<sub_group>};
@@ -28567,6 +28676,8 @@ BUILDIN_DEF(plagiarism, "iii"),
 	BUILDIN_DEF(getguildalliance,"ii"),
 	BUILDIN_DEF(adopt,"vv"),
 	BUILDIN_DEF(getexp2,"ii?"),
+	BUILDIN_DEF(costume1, "i"),
+	BUILDIN_DEF(getcostumeitem, "v"),
 	BUILDIN_DEF(recalculatestat,""),
 	BUILDIN_DEF(hateffect,"ii"),
 	BUILDIN_DEF(getrandomoptinfo, "i"),
diff --git a/src/map/status.cpp b/src/map/status.cpp
index 06c3359..6c29adc 100644
--- a/src/map/status.cpp
+++ b/src/map/status.cpp
@@ -3913,7 +3913,8 @@ int32 status_calc_pc_sub(map_session_data* sd, uint8 opt)
 			continue;
 		if (!sd->inventory_data[index])
 			continue;
-
+		if (sd->inventory.u.items_inventory[current_equip_item_index].card[0] == CARD0_CREATE && MakeDWord(sd->inventory.u.items_inventory[current_equip_item_index].card[2], sd->inventory.u.items_inventory[current_equip_item_index].card[3]) == battle_config.reserved_costume_id)
+			continue;
 		base_status->def += sd->inventory_data[index]->def;
 
 		// Items may be equipped, their effects however are nullified.
